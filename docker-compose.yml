version: '2.1'

services:

  controllers_app:
    build:
      context: ./controller_app/
      dockerfile: ../docker/controller/Dockerfile
    container_name: controllers_app
    ports:
      - '8080:8080'
    volumes:
      - ./controller_app:/controller_app
      - ./controller_app/logs:/var/log
    command: >
      sh -c "python main.py"
    environment:
      - DEBUG=0
      - MANIPULATOR_HOST=manipulator_app
      - MANIPULATOR_PORT=4000
      - THRESHOLD_VALUE=5
      - THRESHOLD_SENSORS=4
    depends_on:
      - manipulator_app

  sensor_app:
    build:
      context: ./sensor_app/
      dockerfile: ../docker/sensor/Dockerfile
#    container_name: sensor_app
    volumes:
      - ./sensor_app:/sensor_app
      - ./sensor_app/logs:/var/log/sensor
    command: >
      sh -c "python main.py"
    environment:
      - DEBUG=0
      - CONTROLLER_HOST=controllers_app
      - CONTROLLER_PORT=8080
    depends_on:
      - controllers_app

  manipulator_app:
    build:
      context: ./manipulator_app/
      dockerfile: ../docker/manipulator/Dockerfile
    container_name: manipulator_app
    volumes:
      - ./manipulator_app:/manipulator_app
      - ./manipulator_app/logs:/var/log/manipulator
    command: >
      sh -c "python main.py"
    environment:
      - MANIPULATOR_PORT=4000
      - MANIPULATOR_HOST=0.0.0.0
      - DEBUG=0

  web_app:
    build:
      context: ./web_app/
      dockerfile: ../docker/web_server/Dockerfile
    container_name: web_app
    ports:
      - '5000:5000'
    volumes:
      - ./web_app:/web_app
      - ./web_app/logs:/var/log/web
    command: >
      sh -c "export FLASK_APP=main:app && flask run --host=0.0.0.0"
    depends_on:
      - controllers_app

  nginx:
    build:
      context: ./docker/nginx/
      dockerfile: ./Dockerfile
    container_name: nginx
    ports:
      - '443:443'
    command: >
      sh -c "exec nginx -g 'daemon off;'"
    depends_on:
      - controllers_app